**Basic Git Commands**

# Initialize a repository
git init

# Clone a repository
git clone <repository_url>

# Fork a repository (GitHub specific)
# Note: Forking is done via the GitHub UI, but you can clone the forked repository
git clone <forked_repository_url>

# Check the status of the repository
git status

# Add files to the staging area
git add <file>
git add .

# Commit changes
git commit -m "commit message"

# View commit history
git log
git log --oneline

# View changes before committing
git diff

git diff <file>

**Branching and Merging**

# List branches
git branch

# Create a new branch
git branch <branch_name>

# Switch to a branch
git checkout <branch_name>
git switch <branch_name>

# Create and switch to a new branch
git checkout -b <branch_name>
git switch -c <branch_name>

# Merge branches
git merge <branch_name>

# Delete a branch
git branch -d <branch_name>

git branch -D <branch_name> # Force delete

**Remote Repositories**

# Add a remote repository
git remote add origin <repository_url>

# View remote repositories
git remote -v

# Push changes to a remote repository
git push origin <branch_name>

git push -u origin <branch_name> # Set upstream

# Pull changes from a remote repository
git pull origin <branch_name>

# Fetch changes from a remote repository
git fetch

git fetch origin

**Undoing Changes**

# Undo changes in the working directory
git checkout -- <file>

git restore <file>

# Unstage a file
git reset HEAD <file>

# Reset the last commit
git reset --soft HEAD~1   # Keep changes staged
git reset --mixed HEAD~1  # Keep changes in working directory
git reset --hard HEAD~1   # Discard changes completely

# Revert a commit
git revert <commit_hash>

**Stashing Changes**

# Stash changes
git stash

git stash save "stash message"

# List stashes
git stash list

# Apply the latest stash
git stash apply

# Apply and remove the latest stash
git stash pop

# Drop a stash
git stash drop

# Clear all stashes
git stash clear

**Tagging**

# Create a tag
git tag <tag_name>

# List tags
git tag

# Push tags to a remote repository
git push origin --tags

# Delete a tag
git tag -d <tag_name>

git push origin --delete <tag_name>

**Configuration**

# Set user name and email
git config --global user.name "Your Name"
git config --global user.email "your_email@example.com"

# View configuration settings
git config --list

# Set default branch name
git config --global init.defaultBranch main

**Git Aliases**

# Set a Git alias
git config --global alias.<alias_name> '<git_command>'

# Example: Shorter log command
git config --global alias.lg "log --oneline --graph --all"

**Miscellaneous Commands**

# Show commit details
git show <commit_hash>

# Remove a file from the repository
git rm <file>

# Remove a file from Git but keep it locally
git rm --cached <file>

# Rebase a branch
git rebase <branch_name>

# Squash commits
git rebase -i HEAD~n

# Clean untracked files
git clean -f  # Remove untracked files
git clean -fd # Remove untracked files and directories

# Show file history
git blame <file>

# Check out a specific commit
git checkout <commit_hash>

# List contributors
git shortlog -sn

# Find a commit that introduced a bug
git bisect start
git bisect bad
git bisect good <commit_hash>

# Restore previous versions of a file
git checkout <commit_hash> -- <file>

